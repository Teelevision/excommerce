/*
 * ExCommerce
 *
 * ExCommerce is an example commerce system.
 *
 * API version: beta
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
)

// CartsAPIRouter defines the required methods for binding the api requests to a responses for the CartsApi
// The CartsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CartsApiServicer to perform the required actions, then write the service results to the http response.
type CartsAPIRouter interface {
	DeleteCart(http.ResponseWriter, *http.Request)
	GetAllCarts(http.ResponseWriter, *http.Request)
	GetCart(http.ResponseWriter, *http.Request)
	StoreCart(http.ResponseWriter, *http.Request)
}

// OrdersAPIRouter defines the required methods for binding the api requests to a responses for the OrdersApi
// The OrdersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a OrdersApiServicer to perform the required actions, then write the service results to the http response.
type OrdersAPIRouter interface {
	CreateOrderFromCart(http.ResponseWriter, *http.Request)
	PlaceOrder(http.ResponseWriter, *http.Request)
}

// ProductsAPIRouter defines the required methods for binding the api requests to a responses for the ProductsApi
// The ProductsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProductsApiServicer to perform the required actions, then write the service results to the http response.
type ProductsAPIRouter interface {
	GetAllProducts(http.ResponseWriter, *http.Request)
	StoreCouponForProduct(http.ResponseWriter, *http.Request)
}

// UsersAPIRouter defines the required methods for binding the api requests to a responses for the UsersApi
// The UsersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UsersApiServicer to perform the required actions, then write the service results to the http response.
type UsersAPIRouter interface {
	Login(http.ResponseWriter, *http.Request)
	Register(http.ResponseWriter, *http.Request)
}
